plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
    id 'com.google.gms.google-services'
    id "com.bugsnag.android.gradle"
    id 'kotlin-parcelize'
}


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.doapps.android.weatherapp"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [key_api: "AIzaSyDKxkXnUQgYhwhsPOe4zqaSOr0UrooU_A0"]
    }
    buildTypes {
        debug {
            buildConfigField "String", "BASE_URL", '"http://api.openweathermap.org/data/2.5/"'
            buildConfigField "String", "API_KEY_VALUE", '"751d80f6c314139192ffcb62c107e654"'
            testCoverageEnabled true
        }

        quality {
            buildConfigField "String", "BASE_URL", '"http://api.openweathermap.org/data/2.5/"'
            buildConfigField "String", "API_KEY_VALUE", '"751d80f6c314139192ffcb62c107e654"'
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
            buildConfigField "String", "BASE_URL", '"http://api.openweathermap.org/data/2.5/"'
            buildConfigField "String", "API_KEY_VALUE", '"751d80f6c314139192ffcb62c107e654"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    dataBinding {
        enabled true
    }


    testOptions.unitTests {
        includeAndroidResources = true
    }
}
ext {
    support_version = '1.0.0'
    rxKotlinVersion = '2.4.0'
    rxAndroidVersion = '2.1.1'
    rxAnimationsVersion = '0.0.6'
    daggerVersion = '2.26'
    picassoVersion = '2.71828'
    lifecycleViewModelKtxVersion = '2.3.0-alpha01'
    lifecycleVersion = '2.2.0'
    shadowViewVersion = '0.0.3'
    algoliaVersion = '3.+'
    mockKVersion = '1.9.3'
    junitExtVersion = '1.1.1'
    robolectricVersion = '4.3.1'
    threetenabpVersion = '1.2.2'

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])

    //Modules
    implementation project(path: ':ConexionModule')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //threetenabp
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"

    //supportLib
    implementation "androidx.legacy:legacy-support-v4:$support_version"
    implementation "androidx.recyclerview:recyclerview:$support_version"
    implementation "androidx.cardview:cardview:$support_version"
    //rx

    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "com.mikhaellopez:rxanimation:$rxAnimationsVersion"

    //arch-comp Lifecycles, LiveData, and ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleViewModelKtxVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.3.5"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha01"

    //algolia used in places
    implementation "com.algolia:algoliasearch-android:$algoliaVersion"

    //navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'


    //dataBinding

    //dagger
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"


    //User for convert data
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //picasso
    implementation "com.squareup.picasso:picasso:$picassoVersion"


    //shadowView used in xml
    implementation "com.loopeer.lib:shadow:$shadowViewVersion"


    //Bugsnac used in app manifest
    implementation "com.bugsnag:bugsnag-android:5.+"
    implementation project(path: ':Domain')
    implementation project(path: ':Domain')

    //Room
    def room_version = '2.2.5'
    implementation "androidx.room:room-runtime:$room_version"


    //Testing
    testImplementation "androidx.test.ext:junit-ktx:$junitExtVersion"
    testImplementation "io.mockk:mockk:$mockKVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.koin:koin-test:$koin_version"


    // Used for injection dependency
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"


}